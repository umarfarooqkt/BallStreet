'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tfoot = exports.Thead = exports.Tbody = exports.Tr = exports.Th = exports.Td = exports.Table = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('../build/styles');

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable react/no-multi-comp */

var Table = exports.Table = function (_Component) {
  _inherits(Table, _Component);

  function Table() {
    _classCallCheck(this, Table);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Table).apply(this, arguments));
  }

  _createClass(Table, [{
    key: 'createClassName',
    value: function createClassName() {
      return [_styles2.default.table, this.props.isBordered ? _styles2.default.isBordered : '', this.props.isStriped ? _styles2.default.isStriped : '', this.props.isNarrow ? _styles2.default.isNarrow : '', this.props.className].join(' ').trim();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'table',
        _extends({}, this.props, {
          className: this.createClassName()
        }),
        this.props.children
      );
    }
  }]);

  return Table;
}(_react.Component);

Table.propTypes = {
  children: _react.PropTypes.any,
  className: _react.PropTypes.string,
  isBordered: _react.PropTypes.bool,
  isStriped: _react.PropTypes.bool,
  isNarrow: _react.PropTypes.bool
};
Table.defaultProps = {
  style: {},
  className: ''
};

var Td = exports.Td = function (_Component2) {
  _inherits(Td, _Component2);

  function Td() {
    _classCallCheck(this, Td);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Td).apply(this, arguments));
  }

  _createClass(Td, [{
    key: 'createClassName',
    value: function createClassName() {
      return [_styles2.default.td, this.props.isIcon ? _styles2.default.isIcon : '', this.props.className].join(' ').trim();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'td',
        _extends({}, this.props, {
          className: this.createClassName()
        }),
        this.props.children
      );
    }
  }]);

  return Td;
}(_react.Component);

Td.propTypes = {
  children: _react.PropTypes.any,
  className: _react.PropTypes.string,
  isIcon: _react.PropTypes.bool
};
Td.defaultProps = {
  className: ''
};

var Th = exports.Th = function (_Component3) {
  _inherits(Th, _Component3);

  function Th() {
    _classCallCheck(this, Th);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Th).apply(this, arguments));
  }

  _createClass(Th, [{
    key: 'createClassName',
    value: function createClassName() {
      return [_styles2.default.th, this.props.className].join(' ').trim();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'th',
        _extends({}, this.props, {
          className: this.createClassName()
        }),
        this.props.children
      );
    }
  }]);

  return Th;
}(_react.Component);

Th.propTypes = {
  children: _react.PropTypes.any,
  className: _react.PropTypes.string
};
Th.defaultProps = {
  className: ''
};

var Tr = exports.Tr = function (_Component4) {
  _inherits(Tr, _Component4);

  function Tr() {
    _classCallCheck(this, Tr);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Tr).apply(this, arguments));
  }

  _createClass(Tr, [{
    key: 'createClassName',
    value: function createClassName() {
      return [_styles2.default.tr, this.props.className].join(' ').trim();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'tr',
        _extends({}, this.props, {
          className: this.createClassName()
        }),
        this.props.children
      );
    }
  }]);

  return Tr;
}(_react.Component);

Tr.propTypes = {
  children: _react.PropTypes.any,
  className: _react.PropTypes.string
};
Tr.defaultProps = {
  className: ''
};

var Tbody = exports.Tbody = function (_Component5) {
  _inherits(Tbody, _Component5);

  function Tbody() {
    _classCallCheck(this, Tbody);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Tbody).apply(this, arguments));
  }

  _createClass(Tbody, [{
    key: 'createClassName',
    value: function createClassName() {
      return [_styles2.default.tr, this.props.className].join(' ').trim();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'tbody',
        _extends({}, this.props, {
          className: this.createClassName()
        }),
        this.props.children
      );
    }
  }]);

  return Tbody;
}(_react.Component);

Tbody.propTypes = {
  children: _react.PropTypes.any,
  className: _react.PropTypes.string
};
Tbody.defaultProps = {
  className: ''
};

var Thead = exports.Thead = function (_Component6) {
  _inherits(Thead, _Component6);

  function Thead() {
    _classCallCheck(this, Thead);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Thead).apply(this, arguments));
  }

  _createClass(Thead, [{
    key: 'createClassName',
    value: function createClassName() {
      return [_styles2.default.tr, this.props.className].join(' ').trim();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'thead',
        _extends({}, this.props, {
          className: this.createClassName()
        }),
        this.props.children
      );
    }
  }]);

  return Thead;
}(_react.Component);

Thead.propTypes = {
  children: _react.PropTypes.any,
  className: _react.PropTypes.string
};
Thead.defaultProps = {
  className: ''
};

var Tfoot = exports.Tfoot = function (_Component7) {
  _inherits(Tfoot, _Component7);

  function Tfoot() {
    _classCallCheck(this, Tfoot);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Tfoot).apply(this, arguments));
  }

  _createClass(Tfoot, [{
    key: 'createClassName',
    value: function createClassName() {
      return [_styles2.default.tr, this.props.className].join(' ').trim();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'tfoot',
        _extends({}, this.props, {
          className: this.createClassName()
        }),
        this.props.children
      );
    }
  }]);

  return Tfoot;
}(_react.Component);

Tfoot.propTypes = {
  children: _react.PropTypes.any,
  className: _react.PropTypes.string
};
Tfoot.defaultProps = {
  className: ''
};