'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NavContainer = exports.NavToggle = exports.NavItem = exports.NavGloup = exports.Nav = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('../build/styles');

var _styles2 = _interopRequireDefault(_styles);

var _helper = require('./helper/helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable react/no-multi-comp */

var Nav = exports.Nav = function (_Component) {
  _inherits(Nav, _Component);

  function Nav() {
    _classCallCheck(this, Nav);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Nav).apply(this, arguments));
  }

  _createClass(Nav, [{
    key: 'createClassName',
    value: function createClassName() {
      return [_styles2.default.nav, this.props.hasShadow ? _styles2.default.hasShadow : '', this.props.className].join(' ').trim();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'nav',
        _extends({}, (0, _helper.getCallbacks)(this.props), {
          style: this.props.style,
          className: this.createClassName()
        }),
        this.props.children
      );
    }
  }]);

  return Nav;
}(_react.Component);

Nav.propTypes = {
  style: _react.PropTypes.object,
  children: _react.PropTypes.any,
  className: _react.PropTypes.string,
  hasShadow: _react.PropTypes.bool
};
Nav.defaultProps = {
  style: {},
  className: ''
};

var NavGloup = exports.NavGloup = function (_Component2) {
  _inherits(NavGloup, _Component2);

  function NavGloup() {
    _classCallCheck(this, NavGloup);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(NavGloup).apply(this, arguments));
  }

  _createClass(NavGloup, [{
    key: 'createClassName',
    value: function createClassName() {
      var align = this.props.align && this.props.align.substring(0, 1).toUpperCase() + this.props.align.substring(1);
      return [_styles2.default['nav' + align], this.props.isMenu ? _styles2.default.navMenu : '', this.props.className].join(' ').trim();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        _extends({}, (0, _helper.getCallbacks)(this.props), {
          style: this.props.style,
          className: this.createClassName()
        }),
        this.props.children
      );
    }
  }]);

  return NavGloup;
}(_react.Component);

NavGloup.propTypes = {
  style: _react.PropTypes.object,
  children: _react.PropTypes.any,
  className: _react.PropTypes.string,
  align: _react.PropTypes.oneOf(['left', 'center', 'right']),
  isMenu: _react.PropTypes.bool
};
NavGloup.defaultProps = {
  style: {},
  className: ''
};

var NavItem = exports.NavItem = function (_Component3) {
  _inherits(NavItem, _Component3);

  function NavItem() {
    _classCallCheck(this, NavItem);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(NavItem).apply(this, arguments));
  }

  _createClass(NavItem, [{
    key: 'createClassName',
    value: function createClassName() {

      return [_styles2.default.navItem, this.props.isActive ? _styles2.default.isActive : '', this.props.isTab ? _styles2.default.isTab : '', this.props.className].join(' ').trim();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'span',
        _extends({}, (0, _helper.getCallbacks)(this.props), {
          style: this.props.style,
          className: this.createClassName()
        }),
        this.props.children
      );
    }
  }]);

  return NavItem;
}(_react.Component);

NavItem.propTypes = {
  style: _react.PropTypes.object,
  children: _react.PropTypes.any,
  className: _react.PropTypes.string,
  isActive: _react.PropTypes.bool,
  isTab: _react.PropTypes.bool
};
NavItem.defaultProps = {
  style: {},
  className: ''
};

var NavToggle = exports.NavToggle = function (_Component4) {
  _inherits(NavToggle, _Component4);

  function NavToggle() {
    _classCallCheck(this, NavToggle);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(NavToggle).apply(this, arguments));
  }

  _createClass(NavToggle, [{
    key: 'createClassName',
    value: function createClassName() {
      return [_styles2.default.navToggle, this.props.isActive ? _styles2.default.isActive : '', this.props.className].join(' ').trim();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'span',
        _extends({}, (0, _helper.getCallbacks)(this.props), {
          style: this.props.style,
          className: this.createClassName()
        }),
        _react2.default.createElement('span', null),
        _react2.default.createElement('span', null),
        _react2.default.createElement('span', null)
      );
    }
  }]);

  return NavToggle;
}(_react.Component);

NavToggle.propTypes = {
  style: _react.PropTypes.object,
  children: _react.PropTypes.any,
  className: _react.PropTypes.string,
  isActive: _react.PropTypes.bool
};
NavToggle.defaultProps = {
  style: {},
  className: ''
};

var NavContainer = exports.NavContainer = function (_Component5) {
  _inherits(NavContainer, _Component5);

  function NavContainer() {
    _classCallCheck(this, NavContainer);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(NavContainer).apply(this, arguments));
  }

  _createClass(NavContainer, [{
    key: 'createClassName',
    value: function createClassName() {
      return [_styles2.default.container, this.props.className].join(' ').trim();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        _extends({}, (0, _helper.getCallbacks)(this.props), {
          style: this.props.style,
          className: this.createClassName()
        }),
        this.props.children
      );
    }
  }]);

  return NavContainer;
}(_react.Component);

NavContainer.propTypes = {
  style: _react.PropTypes.object,
  children: _react.PropTypes.any,
  className: _react.PropTypes.string,
  isActive: _react.PropTypes.bool,
  isTab: _react.PropTypes.bool
};
NavContainer.defaultProps = {
  style: {},
  className: ''
};